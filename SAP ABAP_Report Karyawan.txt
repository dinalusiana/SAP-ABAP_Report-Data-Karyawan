SAP ABAP 

YLATPRKPG24_01

----------------------------------------------------------------------------

*-----------------------------------------------------------------------
* Copyright Â© 2022 Kopang
*-----------------------------------------------------------------------
* @author      ...
* @created by  ...
*-----------------------------------------------------------------------
* @description
*              no documentation
*
* @reference   not available
*-----------------------------------------------------------------------
* History
* Date         Programmer   Ref.Document/Description
* <HISTORY CONTENT>
*
*-----------------------------------------------------------------------

REPORT zabpsk_x00001
       NO STANDARD PAGE HEADING
       MESSAGE-ID zabp.
*       LINE-COUNT count
*       LINE-SIZE size

*----user defined include-----------------------------------------------
*-----------------------------------------------------------------------
* Global data include
*-----------------------------------------------------------------------
INCLUDE YLATPRKPG24_01TOP.
*INCLUDE zabpsknx00001top.

*-----------------------------------------------------------------------
* Selection-screens
*-----------------------------------------------------------------------
* select-options / parameter
*-----------------------------------------------------------------------

SELECTION-SCREEN BEGIN OF BLOCK data WITH FRAME TITLE TEXT-001.
SELECT-OPTIONS : s_nik FOR YLATPSKOPANG24_3-nip.
*PARAMETERS : p_divisi TYPE YLATPSKOPANG24_3-divisi.
PARAMETERS : p_comp TYPE YLATPSKOPANG24_3-company OBLIGATORY.
SELECTION-SCREEN END OF BLOCK data.


*---- using Kopang standard include ------------------------------------
*---- DO NOT CHANGE THE STANDARD INCLUDE !
INCLUDE zabpxin_alv.                 " ALV handler

*----user defined include-----------------------------------------------
*-----------------------------------------------------------------------
* Subroutine include
*-----------------------------------------------------------------------
INCLUDE YLATPRKPG24_01F01.
*INCLUDE zabpsknx00001f01.

*-----------------------------------------------------------------------
* Events
*-----------------------------------------------------------------------
INITIALIZATION.
  PERFORM f_initialization.

*-----------------------------------------------------------------------
* Start-Of-Selection
*-----------------------------------------------------------------------
START-OF-SELECTION.
* activate GET if using logical database
*  GET ...
  PERFORM f_get_data.

END-OF-SELECTION.
  IF t_data[] IS INITIAL.
    MESSAGE ID 'AQ' TYPE 'I' NUMBER '260'.
  ELSE.
    PERFORM f_write_data.
  ENDIF.

*-----------------------------------------------------------------------
* Events on selection screens
*-----------------------------------------------------------------------
AT SELECTION-SCREEN OUTPUT.
* DO NOT CHANGE BELOW.
*  PERFORM f_rpt_init_block.
* start coding here
  LOOP AT SCREEN.
    IF screen-name CS 'P_VARI'.
      screen-active = 0.
    ENDIF.
    MODIFY SCREEN.
  ENDLOOP.

AT SELECTION-SCREEN.

*-----------------------------------------------------------------------
* Events in lists
*-----------------------------------------------------------------------
AT LINE-SELECTION.

AT USER-COMMAND.
  AT pfn.

-----------------------------------------------------------------------------------------


YLATPRKPG24_01F01

-------------------------------------------------------------------------------------------------



*&---------------------------------------------------------------------*
*&  Include ZABPSKNX00001F01                                           *
*&  Subroutine Include                                                 *
*----------------------------------------------------------------------*

*-----------------------------------------------------------------------
* Form          : F_INITIALIZATION
* Description   : First initialization.
*                 <Generated code>
*-----------------------------------------------------------------------
FORM f_initialization.
* Add here if you want to set the initial value for all variable

* activate this subroutine if using ALV include
  PERFORM f_alv_init.

* activate this subroutine if using Smartforms include
*  PERFORM f_sf_init_selscr.

* change initial value if needed
*  p_dest = 'WINDOWS'.
*  p_disp = 'X'.
*
** use this function if you want to hide block printer
*  PERFORM f_rpt_use_block_printer USING 'X'.

ENDFORM.                    "F_INITIALIZATION


*$*$--------------------------------------------------------------------
*$*$ Form          : F_INIT_DATA
*$*$ Description   : Initialization data every selection.
*$*$                 <Generated code>
*$*$--------------------------------------------------------------------
FORM f_init_data.

* don't change below
*  CLEAR: d_frm_subrc, sy-subrc.
ENDFORM.                    "F_INIT_DATA

*$*$--------------------------------------------------------------------
*$*$ Form          : F_GET_DATA
*$*$ Description   : Select data from database
*$*$                 <Generated code>
*$*$--------------------------------------------------------------------
FORM f_get_data.

  DATA : lt_salary TYPE TABLE OF ylatstkpg24_02,
         wa_sal LIKE LINE OF lt_salary,
         lv_no  TYPE int3,
         lv_gaji TYPE fins_bat_amount_local_currency.


  SELECT a~company, a~nip, a~nama, a~divisi, a~jabatan,
        ylatpskopang24_2~pendidikanterakhir, ylatpskopang24_4~namapasangan
    FROM ylatpskopang24_3 AS a
*    INNER JOIN ylatpskopang24_2 ON ylatpskopang24_2~nip = a~nip
*    INNER JOIN ylatpskopang24_4 ON ylatpskopang24_4~nip = a~nip
    LEFT JOIN ylatpskopang24_2 ON ylatpskopang24_2~nip = a~nip
    LEFT JOIN ylatpskopang24_4 ON ylatpskopang24_4~nip = a~nip
    WHERE a~nip IN @s_nik
*      AND a~divisi = @p_divisi
      AND a~company = @p_comp
    INTO TABLE @DATA(t_join).

    IF t_join[] IS NOT INITIAL.
       SELECT bukrs, butxt
         FROM t001
         FOR ALL ENTRIES IN @t_join
         WHERE bukrs = @t_join-company
         INTO TABLE @DATA(t_t001).
    ENDIF.

    LOOP AT t_join INTO DATA(wa_join).
      lv_no = lv_no + 1.
      wa_data-no = lv_no.
      wa_data-comp_code = wa_join-company.

      READ TABLE t_t001 INTO DATA(wa_t001) WITH KEY bukrs = wa_data-comp_code.
      IF sy-subrc = 0.
        wa_data-desc = wa_t001-butxt.
      ENDIF.

      wa_data-nip = wa_join-nip.
      wa_data-nama = wa_join-nama.
      wa_data-divisi = wa_join-divisi.
      wa_data-jab = wa_join-jabatan.
      wa_data-pend = wa_join-pendidikanterakhir.
      wa_data-pasangan = wa_join-namapasangan.

    IF wa_data-jab = 'STAFF'.
       wa_data-status = 'KONTRAK'.
    ELSEIF wa_data-jab = 'MANAGER'.
       wa_data-status = 'PERMANEN'.
    ENDIF.

    REFRESH : lt_salary.
    CLEAR : wa_sal.

    CALL FUNCTION 'YFM_GET_SALARY'
    EXPORTING
        i_nip    = wa_data-nip
      TABLES
        t_salary = lt_salary.
    IF sy-subrc = 0.
      LOOP AT lt_salary INTO wa_sal.
        wa_data-gaji = wa_data-gaji + wa_sal-amount.
        wa_data-curr = wa_sal-currency.
      ENDLOOP.
      lv_gaji = lv_gaji + wa_data-gaji.
    ENDIF.

    append wa_data to t_data.
    clear wa_data.

    ENDLOOP.

    gv_rata = lv_gaji / lv_no.

ENDFORM.                    "F_GET_DATA

*$*$--------------------------------------------------------------------
*$*$ Form          : F_WRITE_DATA
*$*$ Description   : Display data
*$*$                 <Generated code>
*$*$--------------------------------------------------------------------
FORM f_write_data.
  DATA : ld_tanggal(50),
         lv_text TYPE T247-LTX.

CALL FUNCTION 'ISP_GET_MONTH_NAME'
  EXPORTING
   DATE               = sy-datum
    LANGUAGE           = 'i'
*   MONTH_NUMBER       = '00'
 IMPORTING
*   LANGU_BACK         =
   LONGTEXT           = lv_text
*   SHORTTEXT          =
 EXCEPTIONS
   CALENDAR_ID        = 1
   DATE_ERROR         = 2
   NOT_FOUND          = 3
   WRONG_INPUT        = 4
   OTHERS             = 5
          .
IF SY-SUBRC <> 0.
* Implement suitable error handling here
ENDIF.

CONCATENATE sy-datum+6(2) lv_text sy-datum(4) INTO ld_tanggal SEPARATED BY space.


*  ALV Layout
  PERFORM f_alv_build_layout  USING :
      'ZEBRA' 'X',
      'COLWIDTH_OPTIMIZE' 'X'.

*  Sort Field
*      PERFORM f_alv_sort   USING:
*          'GT_DATA' 'FIELD' 'X' '' 'X'.

*  print setup
*  PERFORM f_build_print USING d_alv_print.


  PERFORM f_alv_build_comment TABLES t_header USING :
    'S' 'Report Date' ld_tanggal,
    'S' 'Report By' sy-uname.

*  ALV Event
  PERFORM f_alv_build_event USING:
  slis_ev_top_of_page c_top_of_page_alv,
  slis_ev_pf_status_set c_pf_status,
  slis_ev_user_command c_user_command.
*  ALV Fieldcat
  PERFORM f_build_fieldcat.

*  Execute ALV
  d_alv_varnt-variant = p_vari.
  d_alv_bg_id = ''.
  PERFORM f_alv_grid_display TABLES t_data[].
ENDFORM.                    "F_WRITE_DATA

*&---------------------------------------------------------------------*
*&      Form  F_PF_STATUS
*&---------------------------------------------------------------------*
FORM f_pf_status USING fu_extab TYPE slis_t_extab.
  REFRESH fu_extab.
  SET PF-STATUS 'ZGUI_STATUS' EXCLUDING fu_extab.
ENDFORM.                    "F_PF_STATUS

*&---------------------------------------------------------------------*
*&      Form F_USER_COMMAND
*&---------------------------------------------------------------------*
FORM f_user_command USING pzucomm LIKE sy-ucomm
                          pselfield TYPE slis_selfield.

  PERFORM f_refresh_output.
  pselfield-refresh = 'X'.

  CASE pzucomm.
    WHEN 'PRINT'.
      PERFORM  f_print_data.
  ENDCASE.

ENDFORM.                    "F_USER_COMMAND

*&---------------------------------------------------------------------*
*&      Form  F_BUILD_FIELDCAT
*&---------------------------------------------------------------------*
FORM f_build_fieldcat.

  PERFORM f_alv_build_catalog USING t_alv_fctlg 'T_DATA' :
      "fname desc reftab reffld noout outln hotsp jstfy dosum rowpos colpos icon grp keysel key
      'COMP_CODE' 'Company Code' '' '' '' '10' '' '' '' '1' '1' '' '' '' '',
      'DESC' ' Desc Company Code' '' '' '' '10' '' '' '' '1' '1' '' '' '' '',
      'NIP' '' 'YLATPSKOPANG24_3' 'NIP' '' '10' '' '' '' '1' '1' '' '' '' '',
      'NAMA' '' 'YLATPSKOPANG24_3' 'NAMA' '' '10' '' '' '' '1' '1' '' '' '' '',
      'DIVISI' '' 'YLATPSKOPANG24_3' 'DIVISI' '' '10' '' '' '' '1' '1' '' '' '' '',
      'JAB' '' 'YLATPSKOPANG24_3' 'JABATAN' '' '10' '' '' '' '1' '1' '' '' '' '',
      'STATUS' 'STATUS' '' '' '' '10' '' '' '' '1' '1' '' '' '' '',
      'PEND' '' 'YLATPSKOPANG24_2' 'PENDIDIKANTERAKHIR' '' '10' '' '' '' '1' '1' '' '' '' '',
      'PASANGAN' '' 'YLATPSKOPANG24_4' 'NAMAPASANGAN' '' '10' '' '' '' '1' '1' '' '' '' ''.

PERFORM f_alv_build_catalog_crncy USING t_alv_fctlg 'T_DATA' :
      "fname desc reftab reffld noout outln hotsp jstfy dosum rowpos colpos icon grp keysel key
      'GAJI' 'Gaji' '' '' '10' '' '' 'CURR' 'T_DATA' '' '1' '1' ''.

ENDFORM.                    "F_BUILD_FIELDCAT

*&---------------------------------------------------------------------*
*&      Form  F_REFRESH_OUTPUT
*&---------------------------------------------------------------------*
FORM f_refresh_output .
  DATA lref_alv TYPE REF TO cl_gui_alv_grid.

* Refresh ALV Grid itab data with new value for editable field(s).
  IF lref_alv IS INITIAL.
    CALL FUNCTION 'GET_GLOBALS_FROM_SLVC_FULLSCR'
      IMPORTING
        e_grid = lref_alv.
  ENDIF.

  IF NOT lref_alv IS INITIAL.
    CALL METHOD lref_alv->check_changed_data.
  ENDIF.
ENDFORM.
*&---------------------------------------------------------------------*
*& Form F_PRINT_DATA
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM f_print_data .

  DATA : lv_name   TYPE rs38l_fnam,
         lv_alamat TYPE char30,
         lv_curr   TYPE waers.

  READ TABLE t_data INTO wa_data INDEX 1.
  IF sy-subrc = 0.
    gv_desc = wa_data-desc.
    lv_curr =  wa_data-desc.
    SELECT SINGLE t001~adrnr, adrc~street, adrc~house_num1
      FROM t001
      INNER JOIN adrc ON adrc~addrnumber = t001~adrnr
      WHERE t001~bukrs = @wa_data-comp_code
      INTO @DATA(wa_comp).
    IF sy-subrc = 0.
      CONCATENATE wa_comp-street wa_comp-house_num1 INTO lv_alamat SEPARATED BY space.
    ENDIF.
  ENDIF.


  CALL FUNCTION 'SSF_FUNCTION_MODULE_NAME'
    EXPORTING
      formname           = 'YLATPSKPG24_01'
*     VARIANT            = ' '
*     DIRECT_CALL        = ' '
    IMPORTING
      fm_name            = lv_name " = /1BCDWB/SF00000007 DEV
    EXCEPTIONS
      no_form            = 1
      no_function_module = 2
      OTHERS             = 3.
  IF sy-subrc <> 0.
* Implement suitable error handling here
  ENDIF.

  CALL FUNCTION lv_name
    EXPORTING
*     ARCHIVE_INDEX    =
*     ARCHIVE_INDEX_TAB          =
*     ARCHIVE_PARAMETERS         =
*     CONTROL_PARAMETERS         =
*     MAIL_APPL_OBJ    =
*     MAIL_RECIPIENT   =
*     MAIL_SENDER      =
*     OUTPUT_OPTIONS   =
*     USER_SETTINGS    = 'X'
      lv_alamat        = lv_alamat
      lv_rata_gaji     = gv_rata
      lv_desc          = gv_desc
      lv_curr          = lv_curr
*   IMPORTING
*     DOCUMENT_OUTPUT_INFO       =
*     JOB_OUTPUT_INFO  =
*     JOB_OUTPUT_OPTIONS         =
    tables
      t_data           = t_data
    EXCEPTIONS
      formatting_error = 1
      internal_error   = 2
      send_error       = 3
      user_canceled    = 4
      OTHERS           = 5.
  IF sy-subrc <> 0.
* Implement suitable error handling here
  ENDIF.



ENDFORM.

---------------------------------------------------------------------------


YLATPRKPG24_01TOP

------------------------------------------------------------------------

*&---------------------------------------------------------------------*
*&  Include ZABPSKNX00001TOP                                           *
*&  Global Data Include                                                *
*----------------------------------------------------------------------*
* @data
*-----------------------------------------------------------------------
* TABLES: {table declaration}
TABLES : YLATPSKOPANG24_2,YLATPSKOPANG24_3, YLATPSKOPANG24_4, T001.

*-----------------------------------------------------------------------

*-----------------------------------------------------------------------
* INCLUDES: {additional include}

*-----------------------------------------------------------------------

*-----------------------------------------------------------------------
* INFOTYPES: {infotype declaration}

*-----------------------------------------------------------------------
* CONSTANTS: C_ {constants declaration}

*-----------------------------------------------------------------------
* TYPES: TY_ {types declaration}

*-----------------------------------------------------------------------

*-----------------------------------------------------------------------
* DATA: D_ {variable declaration}

*-----------------------------------------------------------------------

*-----------------------------------------------------------------------
* DATA: BEGIN OF T_ {structure/itab declaration}
* DATA: END OF
*DATA: BEGIN OF t_data OCCURS 0,
*        comp_code TYPE bukrs,
*        desc TYPE T001-BUTXT,
*        nip TYPE YLATPSKOPANG24_3-nip,
*        nama TYPE YLATPSKOPANG24_3-nama,
*        divisi TYPE YLATPSKOPANG24_3-divisi,
*        jab TYPE YLATPSKOPANG24_3-jabatan,
*        status TYPE char10,
*        pend TYPE YLATPSKOPANG24_2-pendidikanterakhir,
*        pasangan TYPE YLATPSKOPANG24_4-namapasangan.
*DATA: END OF t_data.

DATA: t_data TYPE TABLE OF YLATSTKPG24_01,
      wa_data LIKE LINE OF t_data,
      gv_rata TYPE FINS_BAT_AMOUNT_LOCAL_CURRENCY,
      gv_desc TYPE butxt.

*-----------------------------------------------------------------------

*-----------------------------------------------------------------------
* MACRO declaration

*-----------------------------------------------------------------------

